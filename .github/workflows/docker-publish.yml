name: Check and Push
on:
  schedule:
    - cron: '*/30 * * * *'
jobs:
  version-check:
    runs-on: ubuntu-latest
    outputs: 
      version: ${{ steps.check.outputs.version }}
    steps:
      - name: Get Version
        id: check
        run: |
          export VERSION=$(curl -s https://services.sonarr.tv/v1/download/phantom-develop?version=3 | jq -r .version)
          echo VERSION=$VERSION
          MATCH="$(curl -s https://registry.hub.docker.com/v1/repositories/itscontained/sonarr/tags | jq -r '.[] | select(.name==env.VERSION) | .name')"
          if [[ -z "$MATCH" ]]
          then
            echo Setting version output for push job
            echo ::set-output name=version::$VERSION
          else
            echo Found existing tag in repo
            echo ::set-output name=version::""
          fi
  push:
    needs: version-check
    runs-on: ubuntu-latest
    if: needs.version-check.outputs.version
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build --build-args VERSION=${{ needs.version-check.outputs.version }} . \
               --file Dockerfile \
               --tag ${{ github.repository }}:${{ needs.version-check.outputs.version }} \
               --tag ${{ github.repository }}:latest
      - name: Import Secrets
        uses: RichiCoder1/vault-action@v1.0.1
        with:
          url: ${{ secrets.VaultURL }}
          method: approle
          roleId: ${{ secrets.appRoleID }}
          secretId: ${{ secrets.appSecretID }}
          path: kv-v2
          secrets: |
              auth/dockerhubci username | DOCKERHUB_USERNAME ;
              auth/dockerhubci token | DOCKERHUB_TOKEN
      - name: Log into registry
        run: echo ${DOCKERHUB_TOKEN//\"} | docker login -u ${DOCKERHUB_USERNAME//\"} --password-stdin
      - name: Push image
        run: |
          docker push ${{ github.repository }}
